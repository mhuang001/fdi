# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019 - 2021 Maohai Huang, NAOC, ESA
# This file is distributed under the same license as the fdi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: fdi \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-30 09:03+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../sphinx/usage/pal.rst:3
msgid "**PAL**: Product Access Layer"
msgstr "**PAL**：产品访问层"

#: ../sphinx/usage/pal.rst:7
msgid "Table of Contents"
msgstr "目录"

#: ../sphinx/usage/pal.rst:9
msgid ""
"Product Access Layer allows data stored logical \"pools\" to be accessed "
"with light weight product refernces by data processers, data storage, and"
" data consumers. A data product can include a context built with "
"references of relevant data. A ``ProductStorage`` interface is provided "
"to handle saving/retrieving/querying data in registered pools."
msgstr "产品访问层允许数据处理者、数据存储和数据消费者使用轻量级产品引用访问存储的逻辑 \"pools\" 数据。 数据产品可以包括使用相关数据的引用构建的上下文。 提供了一个 ``ProductStorage`` 接口来处理注册池中的保存/检索/查询数据。"

#: ../sphinx/usage/pal.rst:14
msgid "Rationale"
msgstr "基本原理"

#: ../sphinx/usage/pal.rst:16
msgid ""
"In a data processing pipeline or network of processing nodes, data "
"products are generated within a context which may include input data, "
"reference data, and auxiliary data of many kind. It is often needed to "
"have relevant context recorded with a product. However the context could "
"have a large size so including their actual data as metadata of the "
"product is often impractical."
msgstr "在数据处理管道或处理节点网络中，数据产品是在上下文中生成的，其中可能包括输入数据、参考数据和多种辅助数据。通常需要记录产品的相关上下文。然而，上下文可能有很大的尺寸，因此将它们的实际数据作为产品的元数据通常是不切实际的。"

#: ../sphinx/usage/pal.rst:18
msgid ""
"Once FDI data are generated they can have a reference through which they "
"can be accessed. The size of such references are typically less than a "
"few hundred bytes, like a URL. In the product context only data "
"references are recorded."
msgstr "一旦生成 FDI 数据，它们就可以有一个引用，通过它可以访问它们。此类引用的大小通常小于几百字节，例如 URL。在产品上下文中只记录数据引用。"

#: ../sphinx/usage/pal.rst:20
msgid ""
"This package provides ``MapContext``, ``ProductRef``, ``Urn``, "
"``ProductStorage``, ``ProductPool``, and ``Query`` classes (simplified "
"but mostly API-compatible with `Herschel Common Science System v15.0`_) "
"for the storing, retrieving, tagging, and context creating of data "
"product modeled in the dataset package."
msgstr "该包提供 ``MapContext``、``ProductRef``、``Urn``、``ProductStorage``、``ProductPool`` 和 ``Query`` 类（简化但大部分 API 与 `Herschel Common Science System v15.0`_ 兼容），用于存储、检索、标记和创建在数据集中建模的数据产品。"

#: ../sphinx/usage/pal.rst:25
msgid "Definitions"
msgstr "定义"

#: ../sphinx/usage/pal.rst:28
msgid "URN"
msgstr ""

#: ../sphinx/usage/pal.rst:32
msgid "The following is from :class:`Urn`"
msgstr "以下来自:class:`Urn`"

#: ../../fdi/pal/urn.py:3
msgid "The Universial Resource Name (**URN**) string has this format:"
msgstr "通用资源名称 (**URN**) 字符串具有以下格式："

#: ../../fdi/pal/urn.py:5
msgid "urn:<poolname>:<resourcetype>:<serialnumber>"
msgstr ""

#: ../../fdi/pal/urn.py:7
msgid "where"
msgstr "在哪里"

#: ../../fdi/pal/urn.py
msgid "<poolname>"
msgstr ""

#: ../../fdi/pal/urn.py:9
msgid ""
"Also called poolID. Its requirements is like that to a file name and a "
"URL segment, having only printable characters excluding `` ``, ``%``, "
"``?``, ``*``, ``=``, ``/``."
msgstr "也称为池ID。它的要求类似于对文件名和 URL 段的要求，只有可打印的字符，不包括`` ``, ``%``, ``?``, ``*``, ``=``, ``/``."

#: ../../fdi/pal/urn.py
msgid "<resourcetype>"
msgstr ""

#: ../../fdi/pal/urn.py:10
msgid "class name of the data item (usually :class:`Product`)"
msgstr "数据项的类名（通常是:class:`Product`）"

#: ../../fdi/pal/urn.py
msgid "<serialnumber>"
msgstr ""

#: ../../fdi/pal/urn.py:11
msgid "internal index for a certain <resourcetype>."
msgstr "某个 <resourcetype> 的内部索引"

#: ../../fdi/pal/urn.py:13
msgid "The ``poolname`` in a URN is a label. Some examples:"
msgstr "URN 中的 ``poolname`` 是一个标签。 一些例子："

#: ../../fdi/pal/urn.py:15
msgid "urn:pool_mh:fdi.dataset.product.Product:2"
msgstr ""

#: ../../fdi/pal/urn.py:16
msgid "urn:20.20:svom.products.SVOMMapContext:0"
msgstr ""

#: ../../fdi/pal/urn.py:18
msgid ""
"Storage Pools (subclasses of :class:`ProductPool`) are where data item "
"reside. The **PoolURL** is used to give practical information of a pool, "
"such as a poolname, its location, and its access scheme. It is designed "
"to be a local set-up detail that is supposed to be hidden from pool "
"users. Data processing software use ``URN``s to refer to products, "
"without specifying pool location. The poolID in a URN could be a "
":class:`LocalPool` on the development laptop and a "
":class:`HTTPClientPool` on the production cloud."
msgstr "存储池（ :class:`ProductPool` 的子类）是数据项所在的位置。**PoolURL** 用于提供池的实用信息，例如池名称、其位置和访问方案。它被设计为一个本地设置细节，应该对池用户隐藏。数据处理软件使用 ``URN`` 来指代产品，而不指定池位置。``URN`` 中的 poolID 可以是开发笔记本电脑上的 :class:`LocalPool` 和生产云上的 :class:`HTTPClientPool`。"

#: ../sphinx/usage/pal.rst:38
msgid "The following is from :func:`parse_poolurl`"
msgstr "以下内容来自 :func:`parse_poolurl`"

#: ../../fdi/pal/urn.py:3
msgid ""
"The ``PoolURL`` format is in the form of a URL that preceeds its poolname"
" part:"
msgstr "``PoolURL`` 格式采用位于其池名称部分之前的 URL 的形式："

#: ../../fdi/pal/urn.py:5
msgid "<scheme>://<place><poolpath>/<poolname>"
msgstr ""

#: ../../fdi/pal/urn.py
msgid "<scheme>"
msgstr ""

#: ../../fdi/pal/urn.py:7
msgid ""
"Implementation protocol including ``file`` for :class:`LocalPool`, "
"``mem`` for :class:`MemPool`, ``http``, ``https`` for "
":class:`HttpclientPool`."
msgstr ""

#: ../../fdi/pal/urn.py
msgid "<place>"
msgstr ""

#: ../../fdi/pal/urn.py:8
msgid ""
"IP:port such as``192.168.5.6:8080`` for ``http`` and ``https`` schemes, "
"or an empty string for ``file`` and ``mem`` schemes."
msgstr ""

#: ../../fdi/pal/urn.py:9
msgid "same as in URN."
msgstr ""

#: ../../fdi/pal/urn.py
msgid "<poolpath>"
msgstr ""

#: ../../fdi/pal/urn.py:10
msgid "The part between ``place`` and an optional ``poolhint``::"
msgstr ""

#: ../../fdi/pal/urn.py
msgid "<username>"
msgstr ""

#: ../../fdi/pal/urn.py
msgid "<password>"
msgstr ""

#: ../../fdi/pal/urn.py:14
msgid ""
"For ``file`` or ``server`` schemes, e.g. poolpath is ``/c:/tmp`` in "
"``http://localhost:9000/c:/tmp/mypool/`` with ``poolhint`` keyword "
"arguement of :func:`parse_poolurl` not given, or given as ``mypool`` (or "
"``myp`` or ``my`` ...)."
msgstr ""

#: ../../fdi/pal/urn.py:15
msgid ""
"For ``http`` and ``https`` schemes, it is e.g. ``/0.6/tmp`` in "
"``https://10.0.0.114:5000/v0.6/tmp/mypool`` with ``poolhint`` keyword "
"arguement not given, or given as ``mypool`` (or ``myp` or 'my' ...). The "
"meaning of poolpath is subject to interpretation by the  server. In the "
"preceeding example the poolpath has an API version.  "
":meth:`ProductPool.transformpath` is used to map it further. Note that "
"trailing blank and ``/`` are ignored, and stripped in the output."
msgstr ""

#: ../../fdi/pal/urn.py:17
msgid "Examples:"
msgstr "例子："

#: ../../fdi/pal/urn.py:19
msgid "file:///tmp/mydata for pool ```mydata```"
msgstr ""

#: ../../fdi/pal/urn.py:20
msgid "file:///d:/data/test2--v2 for pool ``test2--v2``"
msgstr ""

#: ../../fdi/pal/urn.py:21
msgid "mem:///dummy for pool ``dummy``"
msgstr ""

#: ../../fdi/pal/urn.py:22
msgid "https://10.0.0.114:5000/v0.6/obs for a httpclientpool ``obs``"
msgstr ""

#: ../../fdi/pal/urn.py:23
msgid "server:///tmp/data/0.4/test for a pool ``test`` used on a server."
msgstr ""

#: ../sphinx/usage/pal.rst:46
msgid "ProductRef"
msgstr ""

#: ../sphinx/usage/pal.rst:48
msgid ""
"This class not only holds the URN of the product it references to, but "
"also records who ( the _parents_) are keeping this reference."
msgstr "这个类不仅保存它引用的产品的 URN，还记录谁（_parents_）保持这个引用。"

#: ../sphinx/usage/pal.rst:51
msgid "ProductStorage"
msgstr ""

#: ../sphinx/usage/pal.rst:53
msgid ""
"A centralized access place for saving/loading/querying/deleting data "
"organized in conceptual pools. One gets a ProductRef when saving data."
msgstr "用于保存/加载/查询/删除在概念池中组织的数据的集中访问位置。保存数据时会得到一个 ProductRef。"

#: ../sphinx/usage/pal.rst:56
msgid "ProductPool"
msgstr ""

#: ../sphinx/usage/pal.rst:58
msgid ""
"An place where products can be saved, with a reference for the saved "
"product generated. The product can be retrieved with the reference. Pools"
" based on different media or networking mechanism can be implemented. "
"Multiple pools can be registered in a ProductStorage front-end where "
"users can do the saving, loading, querying etc. so that the pools are "
"collectively form a larger logical storage."
msgstr "可以保存产品的地方，并带有生成的保存产品的引用。可以通过引用检索产品。可以实现基于不同媒体或网络机制的池。在 ProductStorage 前端可以注册多个池，用户可以在其中进行保存、加载、查询等操作，从而使池共同形成一个更大的逻辑存储。"

#: ../sphinx/usage/pal.rst:61
msgid "The reference LocalPool is shown in the following YAML-like schematic:"
msgstr "引用 LocalPool 显示在以下类似 YAML 的示意图中："

#: ../sphinx/usage/pal.rst:97 ../sphinx/usage/pal.rst:111
#: ../sphinx/usage/pal.rst:123
msgid "Examples (from :doc:`quickstart` page):"
msgstr "例子（来自 :doc:`quickstart`）"

#: ../sphinx/usage/quickstart.rst:4
msgid "This section shows how to make/get hold of a `pool`."
msgstr "本节展示了如何创建/获取一个 `pool`。"

#: ../sphinx/usage/quickstart.rst:24
msgid "Saving a Product"
msgstr "保存一个产品"

#: ../sphinx/usage/quickstart.rst:26
msgid ""
"This section shows how to store a product in a \"pool\" and get a "
"reference back."
msgstr "本节展示了如何将产品存储在 \"pool\" 中并获取引用。"

#: ../sphinx/usage/pal.rst:106
msgid "Context and MapContext"
msgstr ""

#: ../sphinx/usage/pal.rst:108
msgid ""
"Context is a Product that holds a set of :class:`ProductRef` s that "
"accessible by keys. The keys are strings for MapContext which usually "
"maps names to product references."
msgstr "Context 是一个 Product ，其中包含一组可通过键访问的 :class:`ProductRef`。键是 MapContext 的字符串，通常将名称映射到产品引用。"

#: ../sphinx/usage/quickstart.rst:4
msgid ""
"This section shows essential steps how product references can be stored "
"in a context."
msgstr "本节展示了如何在上下文中存储产品引用的基本步骤。"

#: ../sphinx/usage/pal.rst:119
msgid "Query"
msgstr "查询"

#: ../sphinx/usage/pal.rst:121
msgid ""
"One can  make queries to a ProductStorage and get back a list of "
"references to products that satisfy search chriteria. Queries can be "
"constructed using Python predicate expressions about a product and its "
"metadata, or a function that returns True or False."
msgstr "可以对 ProductStorage 进行查询，并获取对满足搜索条件的产品的引用列表。可以使用有关产品及其元数据的 Python 谓词表达式或返回 True 或 False 的函数来构造查询。"

#: ../sphinx/usage/quickstart.rst:4
msgid ""
"A :class:`ProductStorage` with pools attached can be queried with tags, "
"properties stored in metadata, or even data in the stored products, using"
" Python syntax."
msgstr "可以使用 Python 语法，利用标签、元数据中存储的属性甚至存储产品中的数据来查询附加了池的 :class:`ProductStorage`。"

#: ../sphinx/usage/pal.rst:132
msgid "run tests"
msgstr "运行测试"

#: ../sphinx/usage/pal.rst:134
msgid ""
"To test PAL functionalities based on local (JSON) pool and memory pool, "
"run in the same directory:"
msgstr "要测试基于本地 (JSON) 池和内存池的 PAL 功能，请在同一目录中运行："

#: ../sphinx/usage/pal.rst:140
msgid "To test functionalities based on http client pool, in one terminal run"
msgstr "要测试基于 http 客户端池的功能，请在一个终端运行"

#: ../sphinx/usage/pal.rst:146
msgid "run"
msgstr "运行"

#: ../sphinx/usage/pal.rst:152
msgid "examine output."
msgstr "检查输出"

#: ../sphinx/usage/pal.rst:156
msgid "Design"
msgstr "设计"

#: ../sphinx/usage/pal.rst:158
msgid "Packages"
msgstr "包"

#: ../sphinx/usage/pal.rst:162
msgid "Classes"
msgstr "类"

